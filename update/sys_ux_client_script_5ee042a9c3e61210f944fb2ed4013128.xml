<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Default">8ee002a9c3e61210f944fb2ed40131f9</macroponent>
        <name>On Gen AI Data Fetch</name>
        <preset/>
        <required_translations>[
    {
        "message": "This article was drafted by Now Assist. Be sure to review it for accuracy before saving."
    },
    {
        "message": "There was a problem generating this article with Now Assist. You can write it yourself now if you'd like."
    }
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
async function handler({
    api,
    event,
    helpers,
    imports
}) {
    if (event.name === "DATA_FETCH_SUCCEEDED") {
        api.setState('isGenAiGenerating', false);

        if (api.state.isGenAiTimedOut) {
            // TODO: send Gen AI feedback = Ignored
            return;
        }
        var output = api.data.generate_article_content_with_gen_ai_1.output;

        if (output.success) {
            helpers.timing.clearTimeout(api.state.genAiTimeoutId);
            var response = output.content;
            if (response.success) {
                for (var key in response.fields) {
                    api.emit('GEN_AI_SET_FIELD', {
                        fieldName: key,
                        value: response.fields[key]
                    });
                }
                api.emit("NOW_UXF_PAGE#ADD_NOTIFICATIONS", {
                    items: [{
                        id: "na_drafted",
                        status: "moderate",
                        icon: "ai-sparkle-fill",
                        content: await helpers.translate("This article was drafted by Now Assist. Be sure to review it for accuracy before saving."),
                        action: {
                            type: "dismiss"
                        }
                    }]
                });
                api.setState('isGenAiGenerated', true);
            } else {
                api.emit("NOW_UXF_PAGE#ADD_NOTIFICATIONS", {
                    items: [{
                        id: "na_error",
                        status: "critical",
                        icon: "ai-sparkle-fill",
                        content: response.errorMessage,
                        action: {
                            type: "dismiss"
                        }
                    }]
                });
            }
            api.emit("NOW_UXF_PAGE#REMOVE_NOTIFICATIONS", {
                items: [{
                    id: "na_drafting"
                }]
            });
            helpers.modal.close("modal_gen_ai");
        } else {
            // This branch of code should be empty since the "generate" databroker will be executed immediately on load
            // Therefore, common ending script for both DATA_FETCH_SUCCEEDED and DATA_FETCH_FAILED must be manually repeated, 
            //  should not be put at the end of the script out side the outer most if else statement
        }
    } else {
        api.setState('isGenAiGenerating', false);
        helpers.timing.clearTimeout(api.state.genAiTimeoutId);

        if (api.state.isGenAiTimedOut) {
            return;
        }

        api.emit("NOW_UXF_PAGE#ADD_NOTIFICATIONS", {
            items: [{
                id: "na_error",
                status: "critical",
                icon: "ai-sparkle-fill",
                content: await helpers.translate("There was a problem generating this article with Now Assist. You can write it yourself now if you'd like."),
                action: {
                    type: "dismiss"
                }
            }]
        });

        api.emit("NOW_UXF_PAGE#REMOVE_NOTIFICATIONS", {
            items: [{
                id: "na_drafting"
            }]
        });
        helpers.modal.close("modal_gen_ai");
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-12-18 08:29:55</sys_created_on>
        <sys_id>5ee042a9c3e61210f944fb2ed4013128</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>On Gen AI Data Fetch</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ux_client_script_5ee042a9c3e61210f944fb2ed4013128</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-12-18 08:29:55</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
